package u5p1_ordenamiento;

import java.awt.Color;
import java.util.Random;





public class PrincipalForm extends javax.swing.JFrame {

    int[] numberArray = new int[10000];
    
    /**
     * Creates new form PrincipalForm
     */
    public PrincipalForm() {
        initComponents();
        
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setSize(800, 450);
        setLocationRelativeTo(null);
        setResizable(false);
        
        lbLoading.setVisible(false);
        
        // Inhabilitar los botones de Ordenamiento
        manageSortingButtons(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lbSubTitle = new javax.swing.JLabel();
        lbMainTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        taSortedValues = new javax.swing.JTextArea();
        btnQuickSort = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        taRawValues = new javax.swing.JTextArea();
        btnCreateArray = new javax.swing.JButton();
        btnBubbleSort = new javax.swing.JButton();
        btnRadix = new javax.swing.JButton();
        btnShellSort = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        lbLoading = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(251, 249, 252));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbSubTitle.setFont(new java.awt.Font("DM Sans Medium", 0, 18)); // NOI18N
        lbSubTitle.setForeground(new java.awt.Color(173, 90, 188));
        lbSubTitle.setText("Unidad 5 | Práctica 1");
        jPanel1.add(lbSubTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, -1, -1));

        lbMainTitle.setFont(new java.awt.Font("DM Sans Light", 0, 36)); // NOI18N
        lbMainTitle.setForeground(new java.awt.Color(173, 90, 188));
        lbMainTitle.setText("Sistema de Ordenamiento");
        jPanel1.add(lbMainTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        taSortedValues.setBackground(new java.awt.Color(204, 204, 204));
        taSortedValues.setColumns(20);
        taSortedValues.setFont(new java.awt.Font("JetBrains Mono", 0, 9)); // NOI18N
        taSortedValues.setForeground(new java.awt.Color(7, 6, 7));
        taSortedValues.setRows(1000);
        jScrollPane1.setViewportView(taSortedValues);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 120, 280, 160));

        btnQuickSort.setBackground(new java.awt.Color(210, 135, 224));
        btnQuickSort.setFont(new java.awt.Font("DM Sans 36pt Medium", 0, 12)); // NOI18N
        btnQuickSort.setForeground(new java.awt.Color(7, 6, 7));
        btnQuickSort.setText("Método Quicksort");
        btnQuickSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuickSortActionPerformed(evt);
            }
        });
        jPanel1.add(btnQuickSort, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 310, 140, -1));

        jLabel1.setFont(new java.awt.Font("DM Sans ExtraBold", 0, 60)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(210, 135, 224));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("→ →");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 170, 130, 60));

        taRawValues.setEditable(false);
        taRawValues.setBackground(new java.awt.Color(204, 204, 204));
        taRawValues.setColumns(20);
        taRawValues.setFont(new java.awt.Font("JetBrains Mono", 0, 9)); // NOI18N
        taRawValues.setForeground(new java.awt.Color(7, 6, 7));
        taRawValues.setLineWrap(true);
        taRawValues.setRows(1000);
        jScrollPane2.setViewportView(taRawValues);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 280, 160));

        btnCreateArray.setBackground(new java.awt.Color(210, 135, 224));
        btnCreateArray.setFont(new java.awt.Font("DM Sans 36pt Medium", 0, 18)); // NOI18N
        btnCreateArray.setForeground(new java.awt.Color(7, 6, 7));
        btnCreateArray.setText("Crear Valores Aleatorios");
        btnCreateArray.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateArrayActionPerformed(evt);
            }
        });
        jPanel1.add(btnCreateArray, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, 280, -1));

        btnBubbleSort.setBackground(new java.awt.Color(210, 135, 224));
        btnBubbleSort.setFont(new java.awt.Font("DM Sans 36pt Medium", 0, 12)); // NOI18N
        btnBubbleSort.setForeground(new java.awt.Color(7, 6, 7));
        btnBubbleSort.setText("Método Burbuja");
        btnBubbleSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBubbleSortActionPerformed(evt);
            }
        });
        jPanel1.add(btnBubbleSort, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 310, 140, -1));

        btnRadix.setBackground(new java.awt.Color(210, 135, 224));
        btnRadix.setFont(new java.awt.Font("DM Sans 36pt Medium", 0, 12)); // NOI18N
        btnRadix.setForeground(new java.awt.Color(7, 6, 7));
        btnRadix.setText("Método Radix");
        btnRadix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRadixActionPerformed(evt);
            }
        });
        jPanel1.add(btnRadix, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 340, 140, -1));

        btnShellSort.setBackground(new java.awt.Color(210, 135, 224));
        btnShellSort.setFont(new java.awt.Font("DM Sans 36pt Medium", 0, 12)); // NOI18N
        btnShellSort.setForeground(new java.awt.Color(7, 6, 7));
        btnShellSort.setText("Método Shellsort");
        btnShellSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShellSortActionPerformed(evt);
            }
        });
        jPanel1.add(btnShellSort, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 340, 140, -1));

        jLabel2.setFont(new java.awt.Font("DM Sans 24pt Medium", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(209, 85, 232));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Métodos de Ordenamiento");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 290, 280, -1));

        lbLoading.setFont(new java.awt.Font("DM Sans 18pt", 0, 12)); // NOI18N
        lbLoading.setForeground(new java.awt.Color(209, 85, 232));
        lbLoading.setText("Creando valor n=");
        jPanel1.add(lbLoading, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 330, 280, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 760, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 395, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    
    
    
    
    
    
    // -------------------------------------------------------------------------
    
    // MÉTODO DEL BOTÓN DE "QUICKSORT"
    private void btnQuickSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuickSortActionPerformed

    }//GEN-LAST:event_btnQuickSortActionPerformed

    
    // MÉTODO DEL BOTÓN DE LLENAR ARRAY
    private void btnCreateArrayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateArrayActionPerformed
        // Este método se encarga de llenar el array.
        // La verdad jamás había usado un Array con tantas posiciones...
        // Solo falta que me reviente la computadora.
        
        Random rnd = new Random();
        lbLoading.setVisible(true);
        
        for (int i = 0; i < 10000; i++){
            numberArray[i] = rnd.nextInt(100); // Del 0 al 99
            lbLoading.setText("Creando valor " + i + "...");
        }
        
        taRawValues.setText(columnFormat(numberArray, true));
        
        lbLoading.setText("TERMINADO!!");
        
        // Habilitar botones de ordenamiento
        manageSortingButtons(true);
    }//GEN-LAST:event_btnCreateArrayActionPerformed

    // MÉTODO DEL BOTÓN DE "BURBUJA"
    private void btnBubbleSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBubbleSortActionPerformed
        taSortedValues.setText(columnFormat(bubbleSort(numberArray), true));
    }//GEN-LAST:event_btnBubbleSortActionPerformed

    
    // MÉTODO DEL BOTÓN DE "RADIX"
    private void btnRadixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRadixActionPerformed
        
    }//GEN-LAST:event_btnRadixActionPerformed

    
    // MÉTODO DEL BOTÓN DE "SHELLSORT"
    private void btnShellSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShellSortActionPerformed
        
    }//GEN-LAST:event_btnShellSortActionPerformed

    
    
    
    // METODOS AUXILIARES
    
    // MÉTODO PARA CONVERTIR ARRAY A STRING PERO CON COLUMNAS
    private String columnFormat(int[] array, boolean numberedRows){
        String txt = "", column;
        
        for (int i = 0; i < 10000; i++){
            if (i == 0 && numberedRows) txt += "c000 | ";
            if (i != 0 && i %10 == 0){ 
                txt += "\n";//Da un enter cada 10 números
                
                if (numberedRows){
                    column = String.valueOf((int) Math.floor(i/10));
                    while (column.length() < 3){ column = "0" + column; }
                    txt += "c" + column + " | ";
                }
            } 
            
            if (array[i] < 10) txt += "0";
            /*
            Los números de un solo dígito se escribirán con un cero al inicio
            para conservar las columnas. Ejemplo: el 5 es "05"
            */
                
            txt += array[i] + ", ";
        }
        
        return txt;
    }
    
    
    // METODO PARA ACTIVAR/DESACTIVAR BOTONES
    private void manageSortingButtons(boolean state){
        // Habilitar/Inhabilitar los botones de Ordenamiento
        btnBubbleSort.setEnabled(state);
        btnQuickSort.setEnabled(state);
        btnShellSort.setEnabled(state);
        btnRadix.setEnabled(state);
        
        
        Color backgroundColor = new Color(204, 204, 204);
        Color textColor = new Color(100, 100, 100);
        
        if (state){
            backgroundColor = new Color(210, 135, 224);
            textColor = new Color(7, 6, 7);
        }
        
        btnBubbleSort.setBackground(backgroundColor);
        btnBubbleSort.setForeground(textColor);
            
        btnQuickSort.setBackground(backgroundColor);
        btnQuickSort.setForeground(textColor);
            
        btnShellSort.setBackground(backgroundColor);
        btnShellSort.setForeground(textColor);
            
        btnRadix.setBackground(backgroundColor);
        btnRadix.setForeground(textColor);
    }
    
    
    // METODO DE ORDENACIÓN: BURBUJA
    private int[] bubbleSort(int [] unsortedArray){
        int n = unsortedArray.length, t;
      
        for (int i = 0; i < n - 1; i++)
        {
            for (int j = 0; j < n - i - 1; j++){
                if (unsortedArray[j] > unsortedArray[j + 1]) {
                  
                    // Intercambian valores si el primero es mayor que el segundo
                    t = unsortedArray[j];
                    unsortedArray[j] = unsortedArray[j + 1];
                    unsortedArray[j + 1] = t;
                }
            }
        }
        
        return unsortedArray;
    }
    
    
    
    // -------------------------------------------------------------------------
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PrincipalForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PrincipalForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PrincipalForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PrincipalForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PrincipalForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBubbleSort;
    private javax.swing.JButton btnCreateArray;
    private javax.swing.JButton btnQuickSort;
    private javax.swing.JButton btnRadix;
    private javax.swing.JButton btnShellSort;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbLoading;
    private javax.swing.JLabel lbMainTitle;
    private javax.swing.JLabel lbSubTitle;
    private javax.swing.JTextArea taRawValues;
    private javax.swing.JTextArea taSortedValues;
    // End of variables declaration//GEN-END:variables
}
